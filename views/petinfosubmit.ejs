<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Activities Page</title>
<link rel="stylesheet" href="css/style.css">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Truculenta:opsz,wght@12..72,200;12..72,700&display=swap"
  rel="stylesheet">
</head>
<body>
    <nav>
      <div class="navContainer">
        <p class="logo">Paws for Health</p>
        <div>
          <a class="addPetPage" href="/petspage">Pet Selection</a>
          <a class="getmetrics" href="/getmetrics">View Graphs</a>
          <a class="logout" href="/logout">Log Out</a>
        </div>
      </div>
    </nav>
    <header class="metricsCont">
      <h2 class="petNameForPage">"Go back to pet selection and choose a pet</h2>
      <section class="metricsSummaryCont">
        <p>Use the form below to log your pet's daily activities. For activities without a concrete value (mood/appetite), use a number from 0-10 to quantify your pet's activity, with 5 being your pet's baseline activity.</p>
        <p>For stool consistency, please refer to the <a href="https://en.wikipedia.org/wiki/Bristol_stool_scale">Bristol stool scale</a></p>
        <p>The date is the only required field, all other activities are optional. You don't need to enter every activity.</p>
        <p>Relogging a duplicate day will overwrite the prior submission for that date</p>
      </section>
    </header>
    
    <section class="metricsForm">
      <form method="" type="text" action="">
        <label>Date(required):</label>
        <input type="date" required="true" id="date">
        <section class="dailyFunctionCont">
          <section>
            <label>Weight(lbs): </label>
            <input name="weight"type="number" id="weight">
            <label>Mood(0-10): </label>
            <input name="mood"type="number" id="mood">
            <label>Appetite(0-10): </label>
            <input name="appetite"type="number" max="10" id="appetite">
            <label>Times vomited: </label>
            <input name="vomit"type="number" id="vomit">
          </section>
          <section>
            <label>Water intake(ml): </label>
            <input name="water"type="number" id="water">
            <label>Times pet passed urine: </label>
            <input name="urine"type="number" id="urine">
            <label>Times pet passed stool: </label>
            <input name="stool"type="number" id="stool">
            <label>Stool consistency(0-7): </label>
            <input name="stoolConsistency"type="number" id="stoolConsistency">
          </section>
        </section>
        <button class="submitBtn" type="submit">Submit</button>
        </form>
    </section>
    <div class="loggedDatesCont">
        <h2>Logged dates</h2>

            <ul class="dateList">

            </ul>
        </div>
        <script>
            const form = document.querySelector('form')
            const name = localStorage.getItem('currentPetName')
            document.querySelector('.petNameForPage').innerText = `You're currently logging ${name}'s activities`
            const date = document.querySelector('#date')
            const weight = document.querySelector('#weight')
            const appetite = document.querySelector('#appetite')
            const mood = document.querySelector('#mood')
            const water = document.querySelector('#water')
            const urine = document.querySelector('#urine')
            const stool = document.querySelector('#stool')
            const stoolConsistency = document.querySelector('#stoolConsistency')
            const vomit = document.querySelector('#vomit')
            const display = document.querySelector('.error')
             form.addEventListener('submit', async (e) => {
                  try {
                  const res = await fetch('/api/pets/petMetrics', {
                    method: 'POST',
                    body: JSON.stringify({ 
                        name: name,
                        date: date.value,
                        weight: weight.value, 
                        appetite: appetite.value, 
                        mood: mood.value, 
                        water: water.value, 
                        urine: urine.value, 
                        stool: stool.value, 
                        stoolConsistency: stoolConsistency.value, 
                        vomit: vomit.value}),
                    headers: { 'Content-Type': 'application/json' }
                  })
                  const data = await res.json()

                  if(res.status === 400 || res.status === 401){
                   return display.textContent = `${data.message}. ${data.error ? data.error : ''}`
                  }
                } catch (err) {
                  console.log(err.message)
                }
              })


              const getLoggedDates = async () => {
        const dateList = document.querySelector(".dateList")

        try {
            const res = await fetch(`/api/pets/getLoggedMetrics/${name}`)
        const data = await res.json()
        console.log(data)
           if (!data) return
          else {
            const loggedDates = data.healthMetrics.map(pet => pet.date)
            loggedDates.forEach((date) => {
              let li = document.createElement("li")
              let btn = document.createElement("button")
              btn.classList.add("submitBtn")
              li.appendChild(document.createTextNode(date))
              btn.appendChild(document.createTextNode('Delete'))
              btn.addEventListener('click', (e) => {
                const date = e.target.parentNode.innerText.slice(0, -6);
                deleteMetric(date)
              })
              li.appendChild(btn)
              dateList.appendChild(li)
            })
        }
            }catch (err) {
                  console.log(err.message)
                }
            }

            async function deleteMetric(date) {
                const name = localStorage.getItem('currentPetName')
                try {
                  const res = await fetch('/api/pets/deleteMetric', {
                    method: 'POST',
                    body: JSON.stringify({ date: date, name: name }),
                    headers: { 'Content-Type': 'application/json' }
                  })
            } catch (err) {
                  console.log(err.message)
                }

                //I CAN"T GET THE PAGE TO RELOAD AFTER SUBMISSION?? FIX PLS.
                document.location.reload()
            }
      getLoggedDates()
          </script>

    </form>
</body>
</html>